/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZLend, ZLendInterface } from "../../contracts/ZLend";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmountAvailableForBorrowInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "userPresent",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "userIndex",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "borrowers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentUserTokenBorrowedAmount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmountAvailableForBorrowInDollars",
        type: "uint256",
      },
    ],
    name: "BorrowTesting1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BorrowTesting2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "index",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountBorrowed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalTokenAmountToCollectFromUser",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "borrowers",
        type: "address[]",
      },
    ],
    name: "PayDebt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "index",
        type: "int256",
      },
    ],
    name: "RepayTesting1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenBorrowed",
        type: "uint256",
      },
    ],
    name: "RepayTesting2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "lenders",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentUserTokenLentAmount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenToWithdrawInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "availableToWithdraw",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmountLentInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "larTokenToRemove",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokentoWithdrawInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "availableToWithdraw",
        type: "uint256",
      },
    ],
    name: "WithdrawTesting",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenToUsdPriceFeed",
        type: "address",
      },
    ],
    name: "addTokenToPriceFeedMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowStableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
    ],
    name: "addTokensForBorrowing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowStableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
    ],
    name: "addTokensForLending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "borrowers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getAmountInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowersArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendersArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRemainingCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTokenAvailableToWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenFrom",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LTV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stableRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct zLend.Token",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensForBorrowingArray",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LTV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stableRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct zLend.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensForLendingArray",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LTV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stableRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct zLend.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalAmountBorrowedInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalAmountLentInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTotalTokenBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddres",
        type: "address",
      },
    ],
    name: "getTotalTokenSupplied",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTotalAmountAvailableForBorrowInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currentUser",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "noOfTokenslentOrBorrowed",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokensLentOrBorrowed",
        type: "string",
      },
    ],
    name: "hasLentOrBorrowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenBorrowed",
        type: "uint256",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "larToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lenders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noOfTokensBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noOfTokensLent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "oneTokenEqualsHowManyDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensBorrowed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensBorrowedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensForBorrowing",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensForLending",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensLent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensLentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080346100b157601f6200303f38819003918201601f19168301916001600160401b038311848410176100b6578084926020946040528339810103126100b157516001600160a01b0390818116908190036100b15760008054336001600160a01b03198083168217845560405195909392167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380600b55600c55600a541617600a55612f729081620000cd8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816306254c6a14611c2b57816308ae7fc214611b4e57816311f4f5d314611b0f5781631419f09314611ae95781631818dd0b1461180a5781631c9e5224146117ec57816327e8e184146117a35781633c9d50931461177e578163447007fd146116845781634b3fd148146112d75781634fa9f5a414611277578163541d8338146112585781636352b56814611232578163715018a6146111d857816374fd0ce0146111965781637924d93f1461113f5781637b9ec997146111195781638078f22c146110de5781638cf1806b146110a85781638da5cb5b14611080578163929eea2114611029578163a2fb342d14610d4a578163a7772b9714610d24578163a8b7415214610cdb578163aac0bf9614610cb5578163ab56ee6614610c8f578163b3d16f8d14610c37578163b9f09bb814610c18578163cd92740914610bd6578163d0450c9414610a18578163d7a9a25c146109ef578163e6eff3801461074c578163f2fde38b14610689578163f3fef3a31461028f578163fb24af7f1461026057508063fc757b8814610223578063fdc8070e146101f05763fe726f80146101c557600080fd5b346101ec57816003193601126101ec57600a5490516001600160a01b039091168152602090f35b5080fd5b509034610220576020366003190112610220575061021461020f611c51565b612981565b82519182526020820152f35b80fd5b50346101ec5760203660031901126101ec5761025c90610249610244611c51565b612682565b9051918291602083526020830190611e9e565b0390f35b82843461022057816003193601126102205750610288602092610281611c6c565b903561292a565b9051908152f35b9190503461066c578060031936011261066c576102aa611c51565b90602435801561068557846102d483516102ce816102c78161229e565b0382611d5b565b336123cf565b12610685576001600160a01b0392808416916102f0828261292a565b916102fa33612415565b9061031661030782612e3e565b61031083612eaf565b906123c2565b831161068157855133815260208101859052604081018390527fa3f1253c66c67d41b745dd1caff0e52d3fb3aefdf8dd746b6af0c96d1f29e3bc90606090a181841161068157610366908361292a565b9286600a5416948987516370a0823160e01b8152338b8201526020978882602481845afa91821561067757908992918492610642575b508c828a116105e357600a548c516323b872dd60e01b815233928101928352306020840152604083018c905295869450908e1692508391829060600103925af180156105bc576105c6575b505b865163a9059cbb60e01b8152338a82019081526020810186905287908290819003604001818e865af180156105bc57917fb7ee00edafdb5db3a1b52a5789a6b562eb48268842d113dbfe860b6f86e5f5959795939160c097959361058f575b508b5260038552878b20338c528552878b206104658482546123c2565b905561047033612599565b92885195338752860152878501526060840152608083015260a0820152a161049733612599565b156104a0578380f35b600154600019929083810190811161057c576104dd61050693926104c66104e293612014565b90549060031b1c1692516102ce816102c78161229e565b612014565b90919082549060031b9160018060a01b039283811b93849216901b16911916179055565b600154908115610569578101918183101561055657507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf50180546001600160a01b03191690556001553880808380f35b634e487b7160e01b845260329052602483fd5b634e487b7160e01b845260318352602484fd5b634e487b7160e01b865260118552602486fd5b6105ae90873d89116105b5575b6105a68183611d5b565b810190612304565b5038610448565b503d61059c565b88513d8d823e3d90fd5b6105dc90873d89116105b5576105a68183611d5b565b50386103e7565b8b516323b872dd60e01b815233918101918252306020830152604082019390935291938492839190829060600103925af180156105bc57610625575b506103e9565b61063b90873d89116105b5576105a68183611d5b565b503861061f565b8381949293503d8311610670575b61065a8183611d5b565b8101031261066c57889151903861039c565b8280fd5b503d610650565b8a513d85823e3d90fd5b8880fd5b8480fd5b90503461066c57602036600319011261066c576106a4611c51565b906106ad612099565b6001600160a01b039182169283156106fa57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b9190503461066c5761075d3661204b565b9061076d96949695939295612099565b83519561077987611d0d565b6001600160a01b039384168752602080880191825294870191825260608701928352608087019788526107b36107ad612140565b886128e4565b156107bc578880f35b60085496600160401b8810156109dc57600197888101806008558110156109c9579060057ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee7969594939260088d52029485600080516020612f1d833981519152019151166001600160601b0360a01b825416179055517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee682015501935180519267ffffffffffffffff84116109b657506108c08554611cd3565b601f8111610970575b5081601f841160011461090d57509282939183928794610902575b50501b916000199060031b1c19161790555b38808080808080808880f35b0151925038806108e4565b919083601f1981168789528489209489905b88838310610956575050501061093d575b505050811b0190556108f6565b015160001960f88460031b161c19169055388080610930565b85870151885590960195948501948793509081019061091f565b858752828720601f850160051c8101918486106109ac575b601f0160051c019085905b8281106109a15750506108c9565b888155018590610993565b9091508190610988565b634e487b7160e01b875260419052602486fd5b634e487b7160e01b8b526032885260248bfd5b634e487b7160e01b8a526041875260248afd5b5050346101ec57816003193601126101ec5761025c90610a0d6121b3565b905191829182611ee0565b9190503461066c57610a293661204b565b90610a38969496959395612099565b835192610a4484611d0d565b6001600160a01b03968716845260208085019182529484019182526060840192835260808401978852610a7e610a786121b3565b856128e4565b15610a87578880f35b60095496600160401b8810156109dc57610aa8600198898101600955611c82565b959095610bc4575185546001600160a01b0319169116178455518684015551600283015551600382015593518051948301949267ffffffffffffffff84116109b65750610af58554611cd3565b601f8111610b7e575b5081601f8411600114610b35575092829391839287946109025750501b916000199060031b1c191617905538808080808080808880f35b919083601f1981168789528489209489905b88838310610b64575050501061093d57505050811b0190556108f6565b858701518855909601959485019487935090810190610b47565b858752828720601f850160051c810191848610610bba575b601f0160051c019085905b828110610baf575050610afe565b888155018590610ba1565b9091508190610b96565b634e487b7160e01b8b528a885260248bfd5b90503461066c578160031936011261066c5781602093610bf4611c6c565b92358152600585528181206001600160a01b03938416825285522054915191168152f35b5050346101ec57816003193601126101ec57602090600b549051908152f35b5050346101ec57806003193601126101ec57610c51611c51565b610c59611c6c565b91610c62612099565b6001600160a01b0391821684526007602052832080546001600160a01b0319169290911691909117905580f35b5050346101ec5760203660031901126101ec57602090610288610cb0611c51565b612eaf565b5050346101ec5760203660031901126101ec57602090610288610cd6611c51565b612469565b90503461066c578160031936011261066c576020928291610cfa611c51565b610d02611c6c565b6001600160a01b03918216845291865283832091168252845220549051908152f35b5050346101ec5760203660031901126101ec57602090610288610d45611c51565b612599565b90508160031936011261066c57610d5f611c51565b9060243591610d75610d6f612140565b8261288d565b156106855782156106855783516370a0823160e01b815233818401526020936001600160a01b03838116949093929091908681602481895afa8015610fea5782918a91610ff8575b5010610ff45786516323b872dd60e01b8152338382019081523060208201526040810183905290939087908590819060600103818c8a5af1938415610fea578794610fcd575b50610e1c8851610e16816102c78161229e565b33612355565b9015610f1c5790610e8a95610e54610e5e938b5190610e3a82611d3f565b60078252666c656e6465727360c81b898301528685612a9a565b600a54169261292a565b875163a9059cbb60e01b815233938101938452602084019190915293849283918a918391604090910190565b03925af18015610f1257917fbb33ffe04605a99e7885b3013bcc050161d1906b3611f09fed70a0c61e1f03de949160609493610ef5575b508552600382528085203386528252808520548151938493338552840152610eeb6060840161229e565b918301520390a180f35b610f0b90843d86116105b5576105a68183611d5b565b5038610ec1565b84513d87823e3d90fd5b509193909250600154600160401b811015610fba57610e8a9492879492610f71610f4f846001610e5e9601600155612014565b81546001600160a01b0360039290921b91821b80199091163390921b16179055565b878b5260038652898b20338c528652838a8c2055600b54610f918161231c565b600b558b5260058652898b20338c528652898b2080546001600160a01b03191689179055610e54565b634e487b7160e01b895260418552602489fd5b610fe390853d87116105b5576105a68183611d5b565b5038610e03565b88513d8b823e3d90fd5b8780fd5b809250888092503d8311611022575b6110118183611d5b565b810103126106815781905138610dbd565b503d611007565b90503461066c57602036600319011261066c573560015481101561066c5760016020935260018060a01b03907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60154169051908152f35b5050346101ec57816003193601126101ec57905490516001600160a01b039091168152602090f35b5050346101ec57816003193601126101ec57805161025c916110d4826110cd81612238565b0383611d5b565b5191829182611f42565b5050346101ec5760203660031901126101ec576020916001600160a01b0390829082611108611c51565b168152600785522054169051908152f35b5050346101ec5760203660031901126101ec5760209061028861113a611c51565b6126f3565b90503461066c57602036600319011261066c573560025481101561066c5760026020935260018060a01b03907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0154169051908152f35b90503461066c578160031936011261066c57816020936111b4611c6c565b92358152600685528181206001600160a01b03938416825285522054915191168152f35b83346102205780600319360112610220576111f1612099565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101ec5760203660031901126101ec57602090610288611253611c51565b612415565b5050346101ec57816003193601126101ec57602090600c549051908152f35b90503461066c57608036600319011261066c57611292611c51565b9061129b611c6c565b936064359067ffffffffffffffff82116102205750916112c4602095926112ce94369101611f86565b9160443591612cd7565b90519015158152f35b8383346101ec57806003193601126101ec578235926112f4611c6c565b916113066113006121b3565b8461288d565b156116805784156116805761131a336126f3565b611324848761292a565b825133815260208101829052604081018390529094907f9855d8af0b8c5c7af990f62dff1fc3aeaded940bb30b8de4b0015eab8bcc7dde90606090a181851161167c5782516370a0823160e01b80825230868301526020956001600160a01b03841694929091908781602481895afa8015611672578b908b9061161f575b8851338152602081019190915260408101919091527f1533b7359743566892d312c1ebe1047dfae70511d2db64634f80e3e8e21473549150606090a1855190815230828201528681602481885afa9081156115ac57908a918a916115ee575b50106115b657845163a9059cbb60e01b815233828201908152602081018b905287908290819060400103818c895af180156115ac5761158f575b5061144e8551610e16816102c781612238565b94909384156114ef576114a590867f699548a5535b752f15032eb2be1672b2e5e62ddc5d461d4edb5a9321d7cbd2529b9c89519261148b84611d3f565b6009845268626f72726f7765727360b81b8c850152612a9a565b8952855283882033895285528388205493805196879633885287015285015215156060840152608083015260e060a08301526114e360e08301612238565b9060c08301520390a180f35b5060025499600160401b8b101561157c57611535610f4f8c60017f699548a5535b752f15032eb2be1672b2e5e62ddc5d461d4edb5a9321d7cbd2529d9e01600255611fdd565b818b52828852868b20338c528852868b2055600c546115538161231c565b600c558a5260068752858a20338b528752858a2080546001600160a01b031916821790556114a5565b634e487b7160e01b8a526041835260248afd5b6115a590873d89116105b5576105a68183611d5b565b508961143b565b86513d8b823e3d90fd5b845162461bcd60e51b8152908101869052601260248201527124b739bab33334b1b4b2b73a102a37b5b2b760711b6044820152606490fd5b809250888092503d8311611618575b6116078183611d5b565b81010312610681578990518b611401565b503d6115fd565b50508781813d831161166b575b6116368183611d5b565b81010312611667578a7f1533b7359743566892d312c1ebe1047dfae70511d2db64634f80e3e8e214735491516113a2565b8980fd5b503d61162c565b87513d8c823e3d90fd5b8580fd5b8380fd5b90503461066c57602036600319011261066c573560095481101561066c5760096005929352029061025c60018060a01b03837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af015416917f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840154937f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b18101546117737f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b37f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b28401549301611d7d565b925195869586611e6b565b5050346101ec57816003193601126101ec57805161025c916110d4826110cd8161229e565b5050346101ec57806003193601126101ec57806020926117c1611c51565b6117c9611c6c565b6001600160a01b0391821683526003865283832091168252845220549051908152f35b5050346101ec57816003193601126101ec5761025c90610a0d612140565b8383346101ec57806003193601126101ec57611824611c51565b906024359182156116805761184182516102ce816102c781612238565b918051933385527ffd17bd4279d0fe7ef2675b6b6e8966ee4b2dbdc635a963c22487d11f2252fd26826020968688820152a185841261167c576001600160a01b0383811680885288875283882033808a5290885284892054855191825260208201819052959192907f39c49093e2def1aebe4cebf2fbebfd37c089d9231d17ecd15319230e499d735890604090a1851561068157670de0b6b3a764000092611934898c8c611906886118ff8d8d6118f78c612682565b015190612456565b048a6123b5565b8a516323b872dd60e01b81523393810193845230602085015260408401919091529384928391829160600190565b0391865af18015611adf57611ac2575b508952898852848920338a5288528489206119608582546123c2565b905561196b3361250b565b156119e3575b507ff17f5805b2095d17ffe834aff3fc2eeff114bfbc250e98f248783f8d34d40042979850906119b0846119a86119b79594612682565b015186612456565b04906123b5565b92815194338652850152830152606082015260a06080820152806119dd60a08201612238565b0390a180f35b60025460001990818101908111611aaf57611a00611a3691611fdd565b905484611a0c8c611fdd565b92909360031b1c169082549060031b9160018060a01b039283811b93849216901b16911916179055565b6002548015611a9c577ff17f5805b2095d17ffe834aff3fc2eeff114bfbc250e98f248783f8d34d400429a9b506119b79594936119b09388936119a8930190611a7e82611fdd565b909182549160031b1b19169055600255939495505050899850611971565b634e487b7160e01b8b5260318c5260248bfd5b634e487b7160e01b8b5260118c5260248bfd5b611ad8908a3d8c116105b5576105a68183611d5b565b508b611944565b87513d8d823e3d90fd5b5050346101ec5760203660031901126101ec57602090610288611b0a611c51565b61250b565b5050346101ec57806003193601126101ec5780670de0b6b3a7640000611b46602093611b3c610244611c51565b0151602435612456565b049051908152f35b90503461066c57602036600319011261066c573560085481101561066c5760086005929352029061025c60018060a01b0383600080516020612f1d833981519152015416917ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840154937ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee58101546117737ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee77ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee68401549301611d7d565b5050346101ec5760203660031901126101ec57602090610288611c4c611c51565b612e3e565b600435906001600160a01b0382168203611c6757565b600080fd5b602435906001600160a01b0382168203611c6757565b600954811015611cbd576005906009600052027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611d03575b6020831014611ced57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611ce2565b60a0810190811067ffffffffffffffff821117611d2957604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117611d2957604052565b90601f8019910116810190811067ffffffffffffffff821117611d2957604052565b9060405191826000825492611d9184611cd3565b908184526001948581169081600014611e005750600114611dbd575b5050611dbb92500383611d5b565b565b9093915060005260209081600020936000915b818310611de8575050611dbb93508201013880611dad565b85548884018501529485019487945091830191611dd0565b915050611dbb94506020925060ff191682840152151560051b8201013880611dad565b60005b838110611e365750506000910152565b8181015183820152602001611e26565b90602091611e5f81518092818552858086019101611e23565b601f01601f1916010190565b919260a093611e9b969592600180871b031684526020840152604083015260608201528160808201520190611e46565b90565b9060a06080611e9b93600180841b0381511684526020810151602085015260408101516040850152606081015160608501520151918160808201520190611e46565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310611f145750505050505090565b9091929394958480611f32600193603f198682030187528a51611e9e565b9801930193019194939290611f04565b6020908160408183019282815285518094520193019160005b828110611f69575050505090565b83516001600160a01b031685529381019392810192600101611f5b565b81601f82011215611c675780359067ffffffffffffffff8211611d295760405192611fbb601f8401601f191660200185611d5b565b82845260208383010111611c6757816000926020809301838601378301015290565b600254811015611cbd5760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b600154811015611cbd5760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b60a0600319820112611c67576004359067ffffffffffffffff8211611c675761207691600401611f86565b906024356001600160a01b0381168103611c675790604435906064359060843590565b6000546001600160a01b031633036120ad57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b906040516120fe81611d0d565b82546001600160a01b0316815260018301546020820152600283015460408201526003830154606082015291829060809061213b90600401611d7d565b910152565b6008549067ffffffffffffffff8211611d2957604051916005602061216983831b820186611d5b565b828552808501906008600052600080516020612f1d8339815191526000925b85841061219757505050505050565b84836001926121a5856120f1565b815201920193019290612188565b6009549067ffffffffffffffff8211611d295760405191600560206121dc83831b820186611d5b565b8285528085019060096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af6000925b85841061221c57505050505050565b848360019261222a856120f1565b81520192019301929061220d565b6002549081815260208091019160026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace916000905b82821061227e575050505090565b83546001600160a01b031685529384019360019384019390910190612270565b600190815491828252602080920192816000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b8282106122e657505050505090565b84546001600160a01b031686529485019493830193908301906122d7565b90816020910312611c6757518015158103611c675790565b600019811461232b5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611cbd5760209160051b010190565b919091825161236a575b506000915060001990565b60005b83518110156123aa576001600160a01b03806123898387612341565b5116908316146123a15761239c9061231c565b61236d565b92505060019190565b50509050803861235f565b9190820180921161232b57565b9190820391821161232b57565b60005b825181101561240c576001600160a01b03806123ee8386612341565b511690831614612406576124019061231c565b6123d2565b91505090565b50505060001990565b61241e8161250b565b9081156124475761242e90612469565b905b80821061244057611e9b916123c2565b5050600090565b61245090612599565b90612430565b8181029291811591840414171561232b57565b600b54600091825b82811061247e5750505090565b60008181526005602090815260408083206001600160a01b03868116808652918452938290205490931692836124c1575b505050506124bc9061231c565b612471565b836124bc9598936118f76124fb83670de0b6b3a7640000966119b0966125019a60005260038652816000209060005285526000205461292a565b92612682565b93903880806124af565b600c54600091825b8281106125205750505090565b8060005260206006815260408060002060018060a01b03808616918260005284528260002054169283612560575b5050505061255b9061231c565b612513565b9261255b9497926125899261258f9583600052600481528260002091600052526000205461292a565b906123b5565b939038808061254e565b600b54600091825b8281106125ae5750505090565b806000526005602081815260408060002060018060a01b039283871691826000528152838360002054166125f0575b50505050506125eb9061231c565b6125a1565b92612589926126499592879a956125eb98600052848152826000208260005281528383600020541660005260038152826000208260005281528260002054948c600052815282600020916000525260002054169061292a565b9390388080806125dd565b6040519061266182611d0d565b60606080836000815260006020820152600060408201526000838201520152565b61268a612654565b50612693612654565b600954909160005b8281106126a9575b50505090565b6126b281611c82565b50546001600160a01b038381169116146126d4576126cf9061231c565b61269b565b90506126eb92506126e59150611c82565b506120f1565b3880806126a3565b9060008080600154905b8181106127bf5750506002549360005b858110612721575050611e9b9293506123c2565b61272a81611fdd565b90546001600160a01b03918483169160039190911b1c82168114612759575b50506127549061231c565b61270d565b600091600954915b82841061276f575050612749565b909192966127b16127b7916125896127896126e58c611c82565b868151166000528660206004815260409081600020908960005252600020549151169061292a565b9761231c565b929190612761565b6127c881612014565b90546001600160a01b039160039189841691831b1c831681146127f7575b5050506127f29061231c565b6126fd565b91906000926008918254935b848610612812575050506127e6565b90919293949761287d61288391670de0b6b3a76400006119b061284b60058e8b60005202600080516020612f1d833981519152016120f1565b8681511660005260208881526128746040806000208c600052835260002054898451169061292a565b91015190612456565b9861231c565b9493929190612803565b815161289a575050600090565b60005b82518110156128da576001600160a01b03806128b98386612341565b515116908316146128d2576128cd9061231c565b61289d565b505050600190565b5050503880612440565b81516128f1575050600090565b60005b82518110156128da576001600160a01b03806129108386612341565b51511690835116146128d2576129259061231c565b6128f4565b9061293761293d91612981565b92612456565b90604d811161232b57600a0a908115612954570490565b634e487b7160e01b600052601260045260246000fd5b519069ffffffffffffffffffff82168203611c6757565b6001600160a01b039081166000908152600760209081526040808320549051633fabe5a360e21b81529194939192911660a083600481845afa928315612a3c579085918394612a47575b5060405163313ce56760e01b81529190829060049082905afa948515612a3c5782956129fd575b50505060ff90921690565b908092939550813d8311612a35575b612a168183611d5b565b810103126101ec57519060ff8216820361022057509160ff38806129f2565b503d612a0c565b6040513d84823e3d90fd5b9150925060a0813d8211612a92575b81612a6360a09383611d5b565b810103126101ec578481612a7860049361296a565b50612a89608083830151920161296a565b509390916129cb565b3d9150612a56565b929190926040918251602094858201815192612acd888281860196612ac081878a611e23565b8101038084520182611d5b565b519020855187810190666c656e6465727360c81b825260078152612af081611d3f565b51902003612bb9575050612b0390612014565b939060018060a01b03948591549060031b1c1691600b54612b468551612b2881611d3f565b600a8152691d1bdad95b9cd3195b9d60b21b85820152828487612cd7565b15612b71575093612b6d9416600052600381528260002091600052526000209182546123b5565b9055565b9394612b7c8561231c565b600b556000948552600583528585208486528352858520911690816001600160601b0360a01b825416179055835260038152838320918352522055565b612bd38686518093612ac083830196879251928391611e23565b51902083518581019068626f72726f7765727360b81b825260098152612bf881611d3f565b51902014612c08575b5050505050565b612c1190611fdd565b939060018060a01b03948591549060031b1c1691600c54612c588551612c3681611d3f565b600e81526d1d1bdad95b9cd09bdc9c9bddd95960921b85820152828487612cd7565b15612c8c575093612c7f9416600052600481528260002091600052526000209182546123b5565b90555b3880808080612c01565b9394612c978561231c565b600c556000948552600683528585208486528352858520911690816001600160601b0360a01b825416179055835260048152838320918352522055612c82565b929091612ce7575b505050600090565b6040928351602092838201815192612d09868281860196612ac081878a611e23565b519020865185810190691d1bdad95b9cd3195b9d60b21b8252600a8152612d2f81611d3f565b51902003612d9a575050600b549360005b858110612d56575050505050505b388080612cdf565b6000818152600585528281206001600160a01b0385811683529086529083902054868216911614612d8f57612d8a9061231c565b612d40565b505050505050600190565b612db48487518093612ac083830196879251928391611e23565b5190208451838101906d1d1bdad95b9cd09bdc9c9bddd95960921b8252600e8152612dde81611d3f565b51902014612df0575b50505050612d4e565b600c549360005b858110612e05575050612de7565b6000818152600685528281206001600160a01b0385811683529086529083902054868216911614612d8f57612e399061231c565b612df7565b60015460009181612e4e57505090565b9082915b818310612e5f5750505090565b909192612ea2612ea89160018060a01b03808516600052600360208181526040928360002092612e8e8b612014565b9054911b1c166000525260002054906123b5565b9361231c565b9190612e52565b60025460009181612ebf57505090565b9082915b818310612ed05750505090565b909192612ea2612f159160018060a01b03808516600052602090600482526040918260002091612eff8a611fdd565b90549060031b1c166000525260002054906123b5565b9190612ec356fef3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3a26469706673582212206328564ef7072a7f164e3e199b38832b690080c6bcfdb3cef5e89ac78f7f80d564736f6c63430008110033";

type ZLendConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZLendConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZLend__factory extends ContractFactory {
  constructor(...args: ZLendConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZLend> {
    return super.deploy(_token, overrides || {}) as Promise<ZLend>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): ZLend {
    return super.attach(address) as ZLend;
  }
  override connect(signer: Signer): ZLend__factory {
    return super.connect(signer) as ZLend__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZLendInterface {
    return new utils.Interface(_abi) as ZLendInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZLend {
    return new Contract(address, _abi, signerOrProvider) as ZLend;
  }
}
